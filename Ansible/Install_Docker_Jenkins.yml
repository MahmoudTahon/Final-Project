---
- hosts: all
  become: true
  gather_facts: false

  tasks:
    - name: Update apt package index
      apt:
        update_cache: yes

    - name: Install required packages to allow apt over HTTPS
      apt:
        name: apt-transport-https
        state: present
        install_recommends: no

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository to apt sources
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Install Docker
      apt:
        name: docker-ce
        state: present
        update_cache: yes

    - name: Install Docker Compose
      block:
        - name: Ensure install directory exists
          ansible.builtin.file:
            path: /usr/local/bin
            state: directory
            mode: '0755'

        - name: Download Docker Compose (official binary)
          ansible.builtin.get_url:
            url: "https://github.com/docker/compose/releases/download/v2.23.0/docker-compose-linux-x86_64"
            dest: /usr/local/bin/docker-compose
            mode: '0755'
            owner: root
            group: root
            checksum: "sha256:6e06123399e5428fbd603564afdac74821fa0a7b4465e8a1a2359b362fc42fc4"
            timeout: 30
            validate_certs: yes

        - name: Verify Docker Compose installation
          ansible.builtin.command: docker-compose --version
          register: compose_version
          changed_when: false
          failed_when: compose_version.rc != 0

        - name: Create symlink for Docker Compose v2
          ansible.builtin.file:
            src: /usr/local/bin/docker-compose
            dest: /usr/local/bin/docker-compose
            state: link
            force: yes

      rescue:
        - name: Clean up on failure
          ansible.builtin.file:
            path: /usr/local/bin/docker-compose
            state: absent
          ignore_errors: yes

        - name: Notify about installation failure
          ansible.builtin.debug:
            msg: "Failed to install Docker Compose"
          changed_when: false

    - name: Add current user to docker group
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

    - name: Start Docker service
      service:
        name: docker
        state: started
        enabled: yes

    - name: Install Java (required by Jenkins)
      apt:
        name: openjdk-17-jre
        state: present

    - name: Add Jenkins repository key
      apt_key:
        url: https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
        state: present

    - name: Add Jenkins repository to apt sources
      apt_repository:
        repo: deb https://pkg.jenkins.io/debian-stable binary/
        state: present

    - name: Install Jenkins
      apt:
        name: jenkins
        state: present
        update_cache: yes

    - name: Start Jenkins service
      service:
        name: jenkins
        state: started
        enabled: yes

    - name: Wait for Jenkins to start up
      wait_for:
        port: 8085
        timeout: 60
    
    - name: Configure Jenkins to run on port 8085
      lineinfile:
        path: /etc/default/jenkins
        regexp: "^HTTP_PORT="
        line: "HTTP_PORT=8085"
        state: present
        backup: yes

    - name: Add user jenkins to docker group
      user:
        name: jenkins
        groups: docker
        append: yes

    - name: Restart Jenkins service
      service:
        name: jenkins
        state: restarted
        enabled: yes

    - name: Enable ufw
      ufw:
        state: enabled
      ignore_errors: yes
      become: true

    - name: Open Jenkins port (8080) in firewall
      ufw:
        rule: allow
        port: '8080'
        proto: tcp
      ignore_errors: yes
      become: true

    - name: Open port 8088 in firewall
      ufw:
        rule: allow
        port: '8088'
        proto: tcp
      ignore_errors: yes
      become: true

    - name: Open port 80 in firewall
      ufw:
        rule: allow
        port: '80'
        proto: tcp
      ignore_errors: yes
      become: true

    - name: Open port 8085 in firewall
      ufw:
        rule: allow
        port: '8085'
        proto: tcp
      ignore_errors: yes
      become: true

    - name: Open Docker port 2375 in firewall
      ufw:
        rule: allow
        port: '2375'
        proto: tcp
      ignore_errors: yes
      become: true

    - name: Open SMTP port 25 in firewall
      ufw:
        rule: allow
        port: '25'
        proto: tcp
      ignore_errors: yes
      become: true

    - name: Open SMTP port 587 in firewall
      ufw:
        rule: allow
        port: '587'
        proto: tcp
      ignore_errors: yes
      become: true

    - name: Reload ufw
      command: ufw reload
      ignore_errors: yes
      become: true

    - name: Get Jenkins initial admin password
      command: cat /var/lib/jenkins/secrets/initialAdminPassword
      register: jenkins_password
      changed_when: false

    - name: Print Jenkins initial admin password
      debug:
        msg: "Jenkins initial admin password: {{ jenkins_password.stdout }}"
      when: jenkins_password.stdout != ""

    - name: Print Jenkins URL
      debug:
        msg: "Jenkins URL: http://{{ ansible_host }}:8080"
      when: jenkins_password.stdout != ""
